#include <criterion/criterion.h>
#include <BubbleSort.hpp>
#include "PushToSortedList.hpp"

// TestSuite(algoTest, .init=setup);

bool compareLists(std::vector<int> array, std::vector<int> arraySorted)
{
    if (array.size() != arraySorted.size())
        return false;
    for (size_t i = 0; i < array.size(); i++) {
        if (array[i] != arraySorted[i])
            return false;
    }
    return true;
}

Test(algoTestEasy, sort1)
{
    std::vector<int> array = {-87, -24, -93, 63, -83, -87, 57, 40, 86, -64};
    std::vector<int> sortedArray = {-93, -87, -87, -83, -64, -24, 40, 57, 63, 86};
    cr_expect(!compareLists(BubbleSort<int>::sort(array), sortedArray), "BubbleSort: Lists (easy) are not equal");
    cr_expect(compareLists(PushToSortedList<int>::sort(array), sortedArray), "PushToSortedList:Lists (easy) are not equal");
}

Test(algoTestEasy, sort2)
{
    std::vector<int> array = {91, -99, -2, -19, 9, 33, 11, -69, -58, 19};
    std::vector<int> sortedArray = {-99, -69, -58, -19, -2, 9, 11, 19, 33, 91};
    cr_expect(compareLists(BubbleSort<int>::sort(array), sortedArray), "BubbleSort: Lists (easy) are not equal");
    cr_expect(compareLists(PushToSortedList<int>::sort(array), sortedArray), "PushToSortedList:Lists (easy) are not equal");
}

Test(algoTestMedium, sort1)
{
    std::vector<int> array = {-71, -88, -5, 62, 46, -78, -19, 85, 95, 0, -51, -70, -9, 8, -21, -80, 11, 26, 77, -69, 63, 65, 57, 61, 55, 23, -19, -11, -52, 16, -31, 84, -62, 63, 47, -37, -54, -49, -74, 38, 83, -39, -8, 43, 38, 88, 9, 71, -23, 78, 90, -61, 17, -45, -80, 56, -77, -18, -96, 28, -82, 35, 63, 62, -21, 47, -13, 58, 0, 40, 91, -13, -1, 100, -79, 76, -84, 48, -20, 0, -47, -46, -79, -86, 36, -99, -72, 73, 80, 93, -24, -4, 17, -40, 10, -74, 97, 70, -86, -73};
    std::vector<int> sortedArray = { -99, -96, -88, -86, -86, -84, -82, -80, -80, -79, -79, -78, -77, -74, -74, -73, -72, -71, -70, -69, -62, -61, -54, -52, -51, -49, -47, -46, -45, -40, -39, -37, -31, -24, -23, -21, -21, -20, -19, -19, -18, -13, -13, -11, -9, -8, -5, -4, -1, 0, 0, 0, 8, 9, 10, 11, 16, 17, 17, 23, 26, 28, 35, 36, 38, 38, 40, 43, 46, 47, 47, 48, 55, 56, 57, 58, 61, 62, 62, 63, 63, 63, 65, 70, 71, 73, 76, 77, 78, 80, 83, 84, 85, 88, 90, 91, 93, 95, 97, 100 };
    cr_expect(compareLists(BubbleSort<int>::sort(array), sortedArray), "BubbleSort: Lists (medium) are not equal");
    cr_expect(compareLists(PushToSortedList<int>::sort(array), sortedArray), "PushToSortedList: Lists (medium) are not equal");
}

Test(algoTestMedium, sort2)
{
    std::vector<int> array = {-327, 199, 106, 695, 761, -918, 297, 779, 108, -904, -292, -913, 965, 34, 17, 83, -615, 551, 645, -607, -35, -159, -964, -418, 933, -894, 662, -773, 384, -284, 542, -608, -622, -724, 787, 557, -220, 869, -251, 529, -178, 241, 510, 696, -255, -832, 892, 655, -584, -316, 627, 60, 742, 919, -373, -126, 808, 102, -319, -565, 192, -440, -884, -494, -320, -954, -794, -271, 439, 844, 67, -4, -568, 135, -793, 914, 636, 266, 504, -608, 208, 143, 56, 491, -7, 871, -731, 80, 537, 333, 271, 406, 15, -918, -4, 703, 186, 346, 548, 221};
    std::vector<int> sortedArray = { -964, -954, -918, -918, -913, -904, -894, -884, -832, -794, -793, -773, -731, -724, -622, -615, -608, -608, -607, -584, -568, -565, -494, -440, -418, -373, -327, -320, -319, -316, -292, -284, -271, -255, -251, -220, -178, -159, -126, -35, -7, -4, -4, 15, 17, 34, 56, 60, 67, 80, 83, 102, 106, 108, 135, 143, 186, 192, 199, 208, 221, 241, 266, 271, 297, 333, 346, 384, 406, 439, 491, 504, 510, 529, 537, 542, 548, 551, 557, 627, 636, 645, 655, 662, 695, 696, 703, 742, 761, 779, 787, 808, 844, 869, 871, 892, 914, 919, 933, 965 };
    cr_expect(compareLists(BubbleSort<int>::sort(array), sortedArray), "BubbleSort: Lists (medium) are not equal");
    cr_expect(compareLists(PushToSortedList<int>::sort(array), sortedArray), "PushToSortedList: Lists (medium) are not equal");
}

Test(algoTestHard, sort1)
{
    std::vector<int> array = {539, 965, -230, 687, 362, -913, 522, -337, -1000, 165, -183, 503, -434, -211, 19, -243, 971, -32, 249, -69, 553, 45, 591, -310, -730, -454, 283, 616, 379, 957, 135, -387, -564, 651, -559, 880, -281, -516, -36, 186, -503, -594, 350, -471, -969, 807, -757, 256, -381, -469, -988, -480, -996, -775, -902, -22, -533, 507, -402, -843, 255, 758, 545, 515, -798, 1000, 479, -894, -852, -395, 224, 93, -26, -751, -999, -743, 735, -780, -529, 315, -586, -964, -598, -807, -778, 858, 620, 872, -540, -370, -559, -808, -527, -245, -227, 412, 915, -886, -864, -764, 69, 860, 224, 420, 553, -208, -588, 186, -43, 819, -435, 627, -95, 890, 676, -80, -925, 445, -344, 546, 785, -149, 534, 844, -113, -727, -783, 297, 882, 285, -13, -854, -753, 674, 653, -507, -515, 743, -273, 961, -429, 788, -470, -910, 842, 948, 496, 403, 336, 378, -747, -525, -282, -310, 674, -487, 529, 629, 694, 925, 189, -76, 686, -165, 814, 939, -801, -431, -561, -301, -35, 432, -836, 544, -45, -634, 447, 943, 812, 226, 276, -811, 808, 96, -124, -255, -887, 516, 690, 50, 139, 973, -643, 620, 70, -362, 637, 18, 188, 844, 806, 858, -124, 628, 878, 105, 550, 742, -532, -882, -280, 237, -195, -346, 733, -551, 560, -978, 217, 746, 888, -543, 713, -374, 193, -970, -532, -337, 882, -387, 151, -473, -759, -361, 863, 240, 318, 559, 55, -73, 678, 221, 445, -654, 769, 942, 189, 796, 292, -175, -128, -858, -303, 634, -35, -728, -840, -611, -729, 571, -605, 204, -913, -956, -526, -722, 923, 575, 0, -305, 726, 905, 328, 235, 660, 237, 905, -942, -769, -431, -140, -496, 968, 389, 348, -164, -308, 637, -861, -439, 4, 836, 780, 983, 387, -931, -779, 693, -516, -916, -562, 699, -837, -753, 724, 727, 895, -191, -435, -442, -247, -408, -895, 201, -499, 54, -315, 186, -692, -603, 747, -627, -210, 986, 659, -456, 248, -558, -400, -771, 843, 432, -235, -122, -485, -390, 404, -112, -226, -979, 483, -597, -265, 793, -257, 987, -794, 725, -47, -374, -4, 526, 18, -830, -916, -988, 190, 743, -634, 920, 679, -858, -9, -495, -687, -700, -465, -338, -716, -334, -759, -117, 194, 96, -636, 574, 7, 94, 933, -652, -993, -691, -73, -706, 653, 601, -791, -384, -601, -306, -909, -329, 899, 162, 775, 934, -137, -182, -795, 1, 688, -502, 274, 233, 896, -359, -435, 943, -387, 858, -954, -660, -707, 793, 234, 831, -727, -832, 86, 837, 929, 685, 497, 974, 935, -925, 572, -21, -548, -624, 802, -221, 970, -928, -453, 693, -841, -388, -698, -824, 522, -555, 545, 235, -21, 839, -443, 620, -520, 931, -861, -645, 228, -843, 831, 416, -37, 62, 275, 567, -344, -979, 770, -71, -96, -471, 161, 280, -233, 186, 947, -936, -690, -482, 648, 726, -891, -197, 188, 960, -155, 310, -494, 812, -552, 904, -561, -613, 502, -501, 872, 596, -276, -848, 739, 364, 34, 905, -684, 533, -707, -239, -598, -642, -490, 115, 782, 536, -463, -424, -362, -598, 283, -139, 812, -103, -346, -808, -34, -566, 987, 665, -334, -309, -12, -878, -158, 902, 474, -877, -1000, 910, -496, -846, -442, 386, 949, -216, 81, -739, 142, -931, -746, 444, -494, -759, -34, 482, 328, 139, -247, 624, 708, 26, 444, 80, 529, -713, -571, -940, -223, 219, -894, -278, -180, 13, 209, 236, 480, -185, -539, -774, -480, -323, 804, -897, -230, -62, -153, -150, 759, 554, 443, -36, -87, -205, -562, 426, -810, -997, 863, 550, -867, 498, -260, -616, 370, 771, 992, 334, -404, -280, 745, 879, 531, 965, -654, 492, 291, 63, -133, 156, 673, 4, 225, -835, -136, 34, -305, -938, 548, 906, -394, -81, 589, -745, -702, 88, 288, 735, -918, 377, -323, -24, 769, -43, 92, 200, 9, 373, -605, 614, 911, 836, -187, -268, 913, -988, 522, 202, 707, 774, -491, -197, 539, 387, 176, -588, 327, -568, -23, 728, 629, 838, -631, -461, -603, -474, 978, -369, 954, 740, -720, -793, 870, -372, -728, 189, -288, 784, 380, 655, -672, -632, 840, 12, 20, -582, 932, 666, -874, -971, 237, 635, -25, 372, 76, 899, 723, 612, -447, 467, -548, 403, -25, -533, 62, -693, 271, 340, -280, -384, 727, 413, -852, 310, 582, -631, 548, 758, -648, 631, 483, 247, 633, 292, 525, 232, 514, -970, -888, 421, 191, -714, -777, 94, -839, -360, 239, 603, -670, -575, 122, 82, -923, -74, -826, 696, 310, -791, 385, -72, -694, -624, -242, -855, 47, -508, 187, -909, -71, -955, 12, 548, 519, -406, 121, -688, 508, 371, 56, 594, -634, 132, 324, 705, 148, -316, 693, -738, -828, -124, -171, 756, -435, -889, 730, -87, 958, -810, 303, -996, -879, -374, 364, 996, 580, -788, -278, -58, 70, -621, 643, 897, 260, 867, -820, -161, -953, 640, -62, -55, -197, 400, -827, 553, -28, -748, -651, -18, 536, 246, 641, 95, -291, 790, 60, -14, -526, -403, 536, 521, -830, 502, 162, 931, 567, 336, -510, -180, 119, -117, -346, -531, 279, 975, 970, -929, -711, -806, -387, 482, -133, -263, -896, 478, -704, -8, -877, -784, -164, -97, 999, 871, 946, 599, 348, -164, 925, 40, 631, -741, 186, -871, -995, 858, 323, -462, -463, -973, -890, 50, -823, 522, -786, -858, -451, -217, 471, 709, 437, 456, -159, 477, 99, -458, 757, -45, -322, -363, -635, 919, -323, 320, -811, 656, -36, 553, -48, -284, -142, -433, -350, 813, -784, -391, -610, -73, 485, -413, -769, -676, 98, -998, 224, 959, 555, 627, 232, -588, -190, 538, -811, -733, 574, 805, 38, -253, 847, 794, 944, -615, -686, -310, -462, 396, 515, -665, 478, 362, 420, 262, -611, 126, -950, -975, 49, -351, -958, 100, -941, 991, 30, -881, -115, 470, -617, 60, -538, -521, 907, -319, 952, -223, 796, 665, 770, 737, 645, 504, 531, -664, 210, 954, 500, -397, -869, -598, 403, -387, 217, 991, -310, 7, 701, -588, -188, -534, -491, 662};
    std::vector<int> sortedArray = {-1000, -1000, -999, -998, -997, -996, -996, -995, -993, -988, -988, -988, -979, -979, -978, -975, -973, -971, -970, -970, -969, -964, -958, -956, -955, -954, -953, -950, -942, -941, -940, -938, -936, -931, -931, -929, -928, -925, -925, -923, -918, -916, -916, -913, -913, -910, -909, -909, -902, -897, -896, -895, -894, -894, -891, -890, -889, -888, -887, -886, -882, -881, -879, -878, -877, -877, -874, -871, -869, -867, -864, -861, -861, -858, -858, -858, -855, -854, -852, -852, -848, -846, -843, -843, -841, -840, -839, -837, -836, -835, -832, -830, -830, -828, -827, -826, -824, -823, -820, -811, -811, -811, -810, -810, -808, -808, -807, -806, -801, -798, -795, -794, -793, -791, -791, -788, -786, -784, -784, -783, -780, -779, -778, -777, -775, -774, -771, -769, -769, -764, -759, -759, -759, -757, -753, -753, -751, -748, -747, -746, -745, -743, -741, -739, -738, -733, -730, -729, -728, -728, -727, -727, -722, -720, -716, -714, -713, -711, -707, -707, -706, -704, -702, -700, -698, -694, -693, -692, -691, -690, -688, -687, -686, -684, -676, -672, -670, -665, -664, -660, -654, -654, -652, -651, -648, -645, -643, -642, -636, -635, -634, -634, -634, -632, -631, -631, -627, -624, -624, -621, -617, -616, -615, -613, -611, -611, -610, -605, -605, -603, -603, -601, -598, -598, -598, -598, -597, -594, -588, -588, -588, -588, -586, -582, -575, -571, -568, -566, -564, -562, -562, -561, -561, -559, -559, -558, -555, -552, -551, -548, -548, -543, -540, -539, -538, -534, -533, -533, -532, -532, -531, -529, -527, -526, -526, -525, -521, -520, -516, -516, -515, -510, -508, -507, -503, -502, -501, -499, -496, -496, -495, -494, -494, -491, -491, -490, -487, -485, -482, -480, -480, -474, -473, -471, -471, -470, -469, -465, -463, -463, -462, -462, -461, -458, -456, -454, -453, -451, -447, -443, -442, -442, -439, -435, -435, -435, -435, -434, -433, -431, -431, -429, -424, -413, -408, -406, -404, -403, -402, -400, -397, -395, -394, -391, -390, -388, -387, -387, -387, -387, -387, -384, -384, -381, -374, -374, -374, -372, -370, -369, -363, -362, -362, -361, -360, -359, -351, -350, -346, -346, -346, -344, -344, -338, -337, -337, -334, -334, -329, -323, -323, -323, -322, -319, -316, -315, -310, -310, -310, -310, -309, -308, -306, -305, -305, -303, -301, -291, -288, -284, -282, -281, -280, -280, -280, -278, -278, -276, -273, -268, -265, -263, -260, -257, -255, -253, -247, -247, -245, -243, -242, -239, -235, -233, -230, -230, -227, -226, -223, -223, -221, -217, -216, -211, -210, -208, -205, -197, -197, -197, -195, -191, -190, -188, -187, -185, -183, -182, -180, -180, -175, -171, -165, -164, -164, -164, -161, -159, -158, -155, -153, -150, -149, -142, -140, -139, -137, -136, -133, -133, -128, -124, -124, -124, -122, -117, -117, -115, -113, -112, -103, -97, -96, -95, -87, -87, -81, -80, -76, -74, -73, -73, -73, -72, -71, -71, -69, -62, -62, -58, -55, -48, -47, -45, -45, -43, -43, -37, -36, -36, -36, -35, -35, -34, -34, -32, -28, -26, -25, -25, -24, -23, -22, -21, -21, -18, -14, -13, -12, -9, -8, -4, 0, 1, 4, 4, 7, 7, 9, 12, 12, 13, 18, 18, 19, 20, 26, 30, 34, 34, 38, 40, 45, 47, 49, 50, 50, 54, 55, 56, 60, 60, 62, 62, 63, 69, 70, 70, 76, 80, 81, 82, 86, 88, 92, 93, 94, 94, 95, 96, 96, 98, 99, 100, 105, 115, 119, 121, 122, 126, 132, 135, 139, 139, 142, 148, 151, 156, 161, 162, 162, 165, 176, 186, 186, 186, 186, 186, 187, 188, 188, 189, 189, 189, 190, 191, 193, 194, 200, 201, 202, 204, 209, 210, 217, 217, 219, 221, 224, 224, 224, 225, 226, 228, 232, 232, 233, 234, 235, 235, 236, 237, 237, 237, 239, 240, 246, 247, 248, 249, 255, 256, 260, 262, 271, 274, 275, 276, 279, 280, 283, 283, 285, 288, 291, 292, 292, 297, 303, 310, 310, 310, 315, 318, 320, 323, 324, 327, 328, 328, 334, 336, 336, 340, 348, 348, 350, 362, 362, 364, 364, 370, 371, 372, 373, 377, 378, 379, 380, 385, 386, 387, 387, 389, 396, 400, 403, 403, 403, 404, 412, 413, 416, 420, 420, 421, 426, 432, 432, 437, 443, 444, 444, 445, 445, 447, 456, 467, 470, 471, 474, 477, 478, 478, 479, 480, 482, 482, 483, 483, 485, 492, 496, 497, 498, 500, 502, 502, 503, 504, 507, 508, 514, 515, 515, 516, 519, 521, 522, 522, 522, 522, 525, 526, 529, 529, 531, 531, 533, 534, 536, 536, 536, 538, 539, 539, 544, 545, 545, 546, 548, 548, 548, 550, 550, 553, 553, 553, 553, 554, 555, 559, 560, 567, 567, 571, 572, 574, 574, 575, 580, 582, 589, 591, 594, 596, 599, 601, 603, 612, 614, 616, 620, 620, 620, 624, 627, 627, 628, 629, 629, 631, 631, 633, 634, 635, 637, 637, 640, 641, 643, 645, 648, 651, 653, 653, 655, 656, 659, 660, 662, 665, 665, 666, 673, 674, 674, 676, 678, 679, 685, 686, 687, 688, 690, 693, 693, 693, 694, 696, 699, 701, 705, 707, 708, 709, 713, 723, 724, 725, 726, 726, 727, 727, 728, 730, 733, 735, 735, 737, 739, 740, 742, 743, 743, 745, 746, 747, 756, 757, 758, 758, 759, 769, 769, 770, 770, 771, 774, 775, 780, 782, 784, 785, 788, 790, 793, 793, 794, 796, 796, 802, 804, 805, 806, 807, 808, 812, 812, 812, 813, 814, 819, 831, 831, 836, 836, 837, 838, 839, 840, 842, 843, 844, 844, 847, 858, 858, 858, 858, 860, 863, 863, 867, 870, 871, 872, 872, 878, 879, 880, 882, 882, 888, 890, 895, 896, 897, 899, 899, 902, 904, 905, 905, 905, 906, 907, 910, 911, 913, 915, 919, 920, 923, 925, 925, 929, 931, 931, 932, 933, 934, 935, 939, 942, 943, 943, 944, 946, 947, 948, 949, 952, 954, 954, 957, 958, 959, 960, 961, 965, 965, 968, 970, 970, 971, 973, 974, 975, 978, 983, 986, 987, 987, 991, 991, 992, 996, 999, 1000};
    cr_expect(compareLists(BubbleSort<int>::sort(array), sortedArray), "BubbleSort: Lists (hard) are not equal");
    cr_expect(compareLists(PushToSortedList<int>::sort(array), sortedArray), "PushToSortedList: Lists (hard) are not equal");
}

Test(algoTestHard, sort2)
{
    std::vector<int> array = {5908, -371, -4698, -3347, 1559, 6041, -9774, 2117, -8439, -7572, 2730, 4142, -1665, -7947, -2239, 8867, -8337, 8807, 7655, 5240, 4269, 5058, -3733, -7268, 8061, 782, 7421, 4303, -6114, 1661, -9450, 3184, -3752, 2895, -4177, 297, 7714, 1757, -3767, 5121, -3541, 3208, -1764, -3690, -6722, 3016, 3354, 8352, -2688, -9352, -402, 9768, -878, -7224, -8128, 1803, -8915, -9145, 1060, 8302, -7548, 7969, -8225, -2605, -3254, -4150, 2534, 4949, 2166, 6617, -9783, -129, -8465, 2943, 6013, 7397, 9628, -5880, -9633, -6438, -6343, -9297, 9009, 6670, 1577, 5045, -2404, 7036, -7426, 8801, 5845, 5744, -1077, 9463, -8455, 9209, 3778, 7632, -38, -5782, 1581, -2513, -9596, -3811, -2930, -8167, 4181, -2583, 9319, -1055, -1101, 5326, -7961, 9123, 6948, 8046, 9448, 9666, 5498, -1898, 9957, 9894, -4894, -209, -2017, -5629, 5885, 7717, -5095, -597, 1141, -5059, 6237, 5083, 2382, -434, 1720, -6045, 3727, 1458, -1814, -9172, 6092, -3126, -5162, -5884, 4829, -5033, 2932, -2844, 3250, -3327, 5721, -5280, -7636, 5534, 1478, 4426, -6616, 9742, -1943, 5959, -2886, -9906, -8769, -7247, -5357, -4006, -2441, -9343, 7868, -4545, -1923, 7411, 3298, 5408, -9146, 1439, 745, -5880, 3441, -1966, 7212, -4172, -3241, -4703, -1107, -8815, 9277, -9724, 1005, -1366, 6709, 5421, 8927, -8665, 3760, 6358, -1233, -2616, 4365, 7505, 5693, -9258, -9506, 8851, -6562, -5887, 1115, 3682, -2583, 6775, 4645, -1250, 2270, -9879, 9032, 5825, -1699, 4245, -6624, 814, 3815, -7245, -6686, -8235, -9604, 8910, 7514, -2532, 8690, 668, 1935, 6313, 6178, -1905, -6271, 3260, -5345, -7172, -265, -1306, -3906, -9196, -436, 8067, -5160, 9646, 3376, -8579, -9225, -8770, -7315, 288, 4235, 1851, 1788, 1912, -2237, -2880, 427, -2327, -4483, 7031, 2437, -5127, -4411, 6084, 7247, -8747, 6774, -9672, -3478, 2452, 7390, 8264, -8437, -5852, 1024, 863, 7728, -2977, -3697, 7693, 819, 5834, -7211, -4045, -6409, 7259, 6755, -629, 3227, -6149, 1791, -5613, -4340, -2127, -87, -4244, -3091, 6908, -2117, -3476, -7822, -4368, 6139, -7584, 5901, 9159, -915, -6868, 4272, 5285, 3477, -4952, -9210, -4731, -8000, -2296, -8232, -8638, -5328, -6381, 9705, -8193, 2010, -1724, -1916, 6984, -3713, -5450, -9780, -1470, 5531, 1769, 8329, -3113, -9737, 8192, 6880, -3154, 2166, -6478, -2315, 7839, -4199, 8467, 3920, -3580, -7241, 5569, 1074, 1567, -286, 4518, 5332, -6300, 6130, -8357, 557, -5177, 5725, 7281, -4418, 5820, -1323, -4866, 1918, 9277, -9158, 8647, -1696, 9519, 6925, -6360, 3144, -5727, 5330, -1849, 2813, 6672, -8353, -3564, -9862, -22, -7913, 8582, 2549, -189, 3955, -3527, 5487, -9765, 8455, 1154, 2701, 3310, -5942, 5835, -8742, 6332, -3301, 4762, 5228, -1179, 2584, -4602, 2483, -8898, 1281, -4455, 3947, -2070, -6615, 1971, 495, -1369, 3928, 1099, -8848, -4260, -6261, 7249, 6029, -3397, 2461, 5892, 3229, 2459, 6168, -1226, 5421, -127, -6293, -5695, -7047, 6267, -3469, 6527, 3229, -8425, 5372, -678, -9074, -3968, -920, -8132, -7312, 8903, 1087, 1946, -8190, -562, 9797, 6193, -1054, -2850, 2930, -2638, -391, 8111, -8343, 4892, 4151, -9832, -8074, -884, -7571, 1795, -3757, 2820, 6479, 7466, 1799, -7613, 4520, 7459, 345, -4555, 2882, 481, -2241, -2886, -791, -7445, 5701, -3143, 6178, -6969, 2048, 2431, 5836, 4680, -2958, -1185, -8765, -6666, 7923, 2171, 8387, -9968, 8705, 8339, 3506, -5964, -4822, -7743, -643, 1360, 8069, 222, -8055, -3591, 9690, 7519, 7775, 7442, -3359, 1547, 6159, 4914, 5589, -5620, 6435, 2533, -2407, 7660, 4346, 1810, -6547, -2513, -7334, 2424, 935, 4798, -4553, 7654, -192, -5176, -4910, 9971, -2600, -1330, 3273, 8565, -5895, 8389, -7776, -6780, -2737, -6106, -4202, 2895, 6115, -3982, 557, -2107, -6941, 8925, 5707, -9148, 9497, -6061, -804, 3135, -351, 8110, 4359, 9686, 7602, 1647, 805, -8457, -7975, 9776, -2451, 5005, -4269, 2663, -2615, 8435, 2126, -897, 1561, 6466, 6912, 8520, -4141, 6432, 1799, 6287, -9690, -3802, 3561, -3996, 2145, -6944, -579, -842, -8683, 75, 6059, -9014, 2589, 2986, -2748, -6855, -3359, -1472, -2377, -2624, 6097, -8370, 4881, -9893, -3317, -6870, 3258, 9990, 9047, 157, 7023, -317, 846, 3755, -772, 9388, 5956, -1649, -1316, 8605, -8597, 8987, -7948, 2936, -2893, -481, -9157, -8640, -6678, -6320, -160, 2225, 6121, -4225, -9911, 6545, 1668, -9734, -7903, -2870, 5017, -9787, -1817, -3592, 452, 2574, 6999, -2988, 331, -7525, 5721, -6322, -3318, 4787, 7589, -3959, 6715, 1935, -6189, 7346, -6884, -8149, 8728, -3442, -2487, -1411, 5602, 5384, -6122, 8440, 7664, 1582, 5719, -5156, 2580, 7717, -5990, -8682, -770, -8749, -8176, 6663, 8709, -4075, 8042, 8643, -2545, -248, 6395, 1665, 9914, -8234, -9940, -5545, 9467, 5565, 5763, 3211, -4227, 316, 1379, 1022, 125, 1483, 7491, 770, -2443, 474, 9801, 3313, -3521, 1923, -5362, -6603, -5939, 3288, 8463, -4204, 610, -6639, -6458, -9087, 6517, 3342, 4313, -8777, 5341, -9424, 6201, -7420, -8760, -4122, 5533, -42, -9098, -1360, 9693, -9311, 3027, -5849, 189, 5251, 9594, 5196, -8110, -5219, -9922, 8187, -6998, 2893, -409, -9119, 1240, 2318, -5650, -347, -9081, -6895, 7418, -286, -3199, 3413, -1753, 1, 8411, 9296, -378, 1867, -1635, -6852, -4136, -3804, -1846, 2365, -764, -5411, -4422, 9407, -4109, 1958, 2770, -94, 5644, -8031, -4707, -1634, 1919, -7712, 3389, -7812, -4148, -8543, 10000, 2981, 5397, 2283, 4477, -6430, -7014, 552, -6758, -8974, 3224, -9732, -8091, 1269, -1065, 9612, 9922, 1360, -1725, 5497, 3152, 6837, -8738, -7728, -3117, -8232, 976, 3009, -4489, -7502, -2259, 725, 6310, 4735, -9483, -9545, 4615, 1757, 5463, 8060, -2952, -4602, 2636, 3982, -6148, -900, -4983, -7456, -6210, 7791, -6090, -3985, -9005, 9961, -8844, -6862, 6098, -4045, -6352, 9391, 434, -3482, -4284, 2489, 7808, 5603, -3962, 7815, 9070, -4696, -6906, -6281, -207, -560, 1807, -1856, -1144, -7805, 9774, 6275, 5537, 4027, 9279, -9200, 1464, 4386, 3474, 2045, 5091, -5376, 1670, 9191, 4802, -7145, 2590, 4372, 6569, 1130, 8778, 8684, 5485, -3206, 3300, -9102, -8235, -1871, -9783, 7274, 3651, -8346, -6831, 3534, 3687, -2488, 529, 5850, -9469, 4297, -1322, 5223, 8137, -1050, 6248, 6876, 683, -3829, 6110, 7836, 2915, 9127, -2434, -5523, -4873, -2026, -227, -3879, -1331, 7280, -2398, 2286, 9348, 379, -4838, 5311, -7624, 905, -8584, -1430, 346, -7844, -6902, -8571, 435, -501, -8147, 3676, 7320, 2323, -2418, 1270, -3332, 9930, -6440, -5065, -4850, -4628, 618, 597, 1638, -8300, 8982, -8622, 9278, 5617, -6696, 4494, 3740, 9854, -617, -4912, 6649, 5598, 8932, -9012, -8968, -2503, 5491, 163, -5773, -8302, 1081, -6508, -1192, -4790, 8140, -1309};
    std::vector<int> sortedArray = { -9968, -9940, -9922, -9911, -9906, -9893, -9879, -9862, -9832, -9787, -9783, -9783, -9780, -9774, -9765, -9737, -9734, -9732, -9724, -9690, -9672, -9633, -9604, -9596, -9545, -9506, -9483, -9469, -9450, -9424, -9352, -9343, -9311, -9297, -9258, -9225, -9210, -9200, -9196, -9172, -9158, -9157, -9148, -9146, -9145, -9119, -9102, -9098, -9087, -9081, -9074, -9014, -9012, -9005, -8974, -8968, -8915, -8898, -8848, -8844, -8815, -8777, -8770, -8769, -8765, -8760, -8749, -8747, -8742, -8738, -8683, -8682, -8665, -8640, -8638, -8622, -8597, -8584, -8579, -8571, -8543, -8465, -8457, -8455, -8439, -8437, -8425, -8370, -8357, -8353, -8346, -8343, -8337, -8302, -8300, -8235, -8235, -8234, -8232, -8232, -8225, -8193, -8190, -8176, -8167, -8149, -8147, -8132, -8128, -8110, -8091, -8074, -8055, -8031, -8000, -7975, -7961, -7948, -7947, -7913, -7903, -7844, -7822, -7812, -7805, -7776, -7743, -7728, -7712, -7636, -7624, -7613, -7584, -7572, -7571, -7548, -7525, -7502, -7456, -7445, -7426, -7420, -7334, -7315, -7312, -7268, -7247, -7245, -7241, -7224, -7211, -7172, -7145, -7047, -7014, -6998, -6969, -6944, -6941, -6906, -6902, -6895, -6884, -6870, -6868, -6862, -6855, -6852, -6831, -6780, -6758, -6722, -6696, -6686, -6678, -6666, -6639, -6624, -6616, -6615, -6603, -6562, -6547, -6508, -6478, -6458, -6440, -6438, -6430, -6409, -6381, -6360, -6352, -6343, -6322, -6320, -6300, -6293, -6281, -6271, -6261, -6210, -6189, -6149, -6148, -6122, -6114, -6106, -6090, -6061, -6045, -5990, -5964, -5942, -5939, -5895, -5887, -5884, -5880, -5880, -5852, -5849, -5782, -5773, -5727, -5695, -5650, -5629, -5620, -5613, -5545, -5523, -5450, -5411, -5376, -5362, -5357, -5345, -5328, -5280, -5219, -5177, -5176, -5162, -5160, -5156, -5127, -5095, -5065, -5059, -5033, -4983, -4952, -4912, -4910, -4894, -4873, -4866, -4850, -4838, -4822, -4790, -4731, -4707, -4703, -4698, -4696, -4628, -4602, -4602, -4555, -4553, -4545, -4489, -4483, -4455, -4422, -4418, -4411, -4368, -4340, -4284, -4269, -4260, -4244, -4227, -4225, -4204, -4202, -4199, -4177, -4172, -4150, -4148, -4141, -4136, -4122, -4109, -4075, -4045, -4045, -4006, -3996, -3985, -3982, -3968, -3962, -3959, -3906, -3879, -3829, -3811, -3804, -3802, -3767, -3757, -3752, -3733, -3713, -3697, -3690, -3592, -3591, -3580, -3564, -3541, -3527, -3521, -3482, -3478, -3476, -3469, -3442, -3397, -3359, -3359, -3347, -3332, -3327, -3318, -3317, -3301, -3254, -3241, -3206, -3199, -3154, -3143, -3126, -3117, -3113, -3091, -2988, -2977, -2958, -2952, -2930, -2893, -2886, -2886, -2880, -2870, -2850, -2844, -2748, -2737, -2688, -2638, -2624, -2616, -2615, -2605, -2600, -2583, -2583, -2545, -2532, -2513, -2513, -2503, -2488, -2487, -2451, -2443, -2441, -2434, -2418, -2407, -2404, -2398, -2377, -2327, -2315, -2296, -2259, -2241, -2239, -2237, -2127, -2117, -2107, -2070, -2026, -2017, -1966, -1943, -1923, -1916, -1905, -1898, -1871, -1856, -1849, -1846, -1817, -1814, -1764, -1753, -1725, -1724, -1699, -1696, -1665, -1649, -1635, -1634, -1472, -1470, -1430, -1411, -1369, -1366, -1360, -1331, -1330, -1323, -1322, -1316, -1309, -1306, -1250, -1233, -1226, -1192, -1185, -1179, -1144, -1107, -1101, -1077, -1065, -1055, -1054, -1050, -920, -915, -900, -897, -884, -878, -842, -804, -791, -772, -770, -764, -678, -643, -629, -617, -597, -579, -562, -560, -501, -481, -436, -434, -409, -402, -391, -378, -371, -351, -347, -317, -286, -286, -265, -248, -227, -209, -207, -192, -189, -160, -129, -127, -94, -87, -42, -38, -22, 1, 75, 125, 157, 163, 189, 222, 288, 297, 316, 331, 345, 346, 379, 427, 434, 435, 452, 474, 481, 495, 529, 552, 557, 557, 597, 610, 618, 668, 683, 725, 745, 770, 782, 805, 814, 819, 846, 863, 905, 935, 976, 1005, 1022, 1024, 1060, 1074, 1081, 1087, 1099, 1115, 1130, 1141, 1154, 1240, 1269, 1270, 1281, 1360, 1360, 1379, 1439, 1458, 1464, 1478, 1483, 1547, 1559, 1561, 1567, 1577, 1581, 1582, 1638, 1647, 1661, 1665, 1668, 1670, 1720, 1757, 1757, 1769, 1788, 1791, 1795, 1799, 1799, 1803, 1807, 1810, 1851, 1867, 1912, 1918, 1919, 1923, 1935, 1935, 1946, 1958, 1971, 2010, 2045, 2048, 2117, 2126, 2145, 2166, 2166, 2171, 2225, 2270, 2283, 2286, 2318, 2323, 2365, 2382, 2424, 2431, 2437, 2452, 2459, 2461, 2483, 2489, 2533, 2534, 2549, 2574, 2580, 2584, 2589, 2590, 2636, 2663, 2701, 2730, 2770, 2813, 2820, 2882, 2893, 2895, 2895, 2915, 2930, 2932, 2936, 2943, 2981, 2986, 3009, 3016, 3027, 3135, 3144, 3152, 3184, 3208, 3211, 3224, 3227, 3229, 3229, 3250, 3258, 3260, 3273, 3288, 3298, 3300, 3310, 3313, 3342, 3354, 3376, 3389, 3413, 3441, 3474, 3477, 3506, 3534, 3561, 3651, 3676, 3682, 3687, 3727, 3740, 3755, 3760, 3778, 3815, 3920, 3928, 3947, 3955, 3982, 4027, 4142, 4151, 4181, 4235, 4245, 4269, 4272, 4297, 4303, 4313, 4346, 4359, 4365, 4372, 4386, 4426, 4477, 4494, 4518, 4520, 4615, 4645, 4680, 4735, 4762, 4787, 4798, 4802, 4829, 4881, 4892, 4914, 4949, 5005, 5017, 5045, 5058, 5083, 5091, 5121, 5196, 5223, 5228, 5240, 5251, 5285, 5311, 5326, 5330, 5332, 5341, 5372, 5384, 5397, 5408, 5421, 5421, 5463, 5485, 5487, 5491, 5497, 5498, 5531, 5533, 5534, 5537, 5565, 5569, 5589, 5598, 5602, 5603, 5617, 5644, 5693, 5701, 5707, 5719, 5721, 5721, 5725, 5744, 5763, 5820, 5825, 5834, 5835, 5836, 5845, 5850, 5885, 5892, 5901, 5908, 5956, 5959, 6013, 6029, 6041, 6059, 6084, 6092, 6097, 6098, 6110, 6115, 6121, 6130, 6139, 6159, 6168, 6178, 6178, 6193, 6201, 6237, 6248, 6267, 6275, 6287, 6310, 6313, 6332, 6358, 6395, 6432, 6435, 6466, 6479, 6517, 6527, 6545, 6569, 6617, 6649, 6663, 6670, 6672, 6709, 6715, 6755, 6774, 6775, 6837, 6876, 6880, 6908, 6912, 6925, 6948, 6984, 6999, 7023, 7031, 7036, 7212, 7247, 7249, 7259, 7274, 7280, 7281, 7320, 7346, 7390, 7397, 7411, 7418, 7421, 7442, 7459, 7466, 7491, 7505, 7514, 7519, 7589, 7602, 7632, 7654, 7655, 7660, 7664, 7693, 7714, 7717, 7717, 7728, 7775, 7791, 7808, 7815, 7836, 7839, 7868, 7923, 7969, 8042, 8046, 8060, 8061, 8067, 8069, 8110, 8111, 8137, 8140, 8187, 8192, 8264, 8302, 8329, 8339, 8352, 8387, 8389, 8411, 8435, 8440, 8455, 8463, 8467, 8520, 8565, 8582, 8605, 8643, 8647, 8684, 8690, 8705, 8709, 8728, 8778, 8801, 8807, 8851, 8867, 8903, 8910, 8925, 8927, 8932, 8982, 8987, 9009, 9032, 9047, 9070, 9123, 9127, 9159, 9191, 9209, 9277, 9277, 9278, 9279, 9296, 9319, 9348, 9388, 9391, 9407, 9448, 9463, 9467, 9497, 9519, 9594, 9612, 9628, 9646, 9666, 9686, 9690, 9693, 9705, 9742, 9768, 9774, 9776, 9797, 9801, 9854, 9894, 9914, 9922, 9930, 9957, 9961, 9971, 9990, 10000 };
    cr_expect(compareLists(BubbleSort<int>::sort(array), sortedArray), "BubbleSort: Lists (hard) are not equal");
    cr_expect(compareLists(PushToSortedList<int>::sort(array), sortedArray), "PushToSortedList: Lists (hard) are not equal");
}